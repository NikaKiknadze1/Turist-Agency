// <auto-generated />
using System;
using G1720252401;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace G1720252401.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("G1720252401.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityID"));

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.HasIndex("CountryID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("G1720252401.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("G1720252401.Models.Hotel", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelID"));

                    b.Property<string>("AdditionalServices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<bool>("MealIncluded")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("HotelID");

                    b.HasIndex("CityID");

                    b.ToTable("Hotels", t =>
                        {
                            t.HasCheckConstraint("CK_Hotel_Stars", "Stars between 1 and 5");
                        });
                });

            modelBuilder.Entity("G1720252401.Models.Tour", b =>
                {
                    b.Property<int>("TourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TourID");

                    b.ToTable("Tours", t =>
                        {
                            t.HasCheckConstraint("CK_Tour_Code", "LEN(Code) = 5");
                        });
                });

            modelBuilder.Entity("G1720252401.Models.TourCity", b =>
                {
                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.HasKey("TourID", "CityID");

                    b.HasIndex("CityID");

                    b.ToTable("TourCities");
                });

            modelBuilder.Entity("G1720252401.Models.Tourist", b =>
                {
                    b.Property<int>("TouristID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TouristID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("TouristID");

                    b.HasIndex("PassportNumber")
                        .IsUnique();

                    b.ToTable("Tourists", t =>
                        {
                            t.HasCheckConstraint("CK_Tourist_TouristID", "LEN(TouristID) = 11");
                        });
                });

            modelBuilder.Entity("G1720252401.Models.TouristTour", b =>
                {
                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.Property<int>("TouristID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TourID", "TouristID");

                    b.HasIndex("TouristID");

                    b.ToTable("TouristTours");
                });

            modelBuilder.Entity("G1720252401.Models.City", b =>
                {
                    b.HasOne("G1720252401.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("G1720252401.Models.Hotel", b =>
                {
                    b.HasOne("G1720252401.Models.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("G1720252401.Models.TourCity", b =>
                {
                    b.HasOne("G1720252401.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G1720252401.Models.Tour", "Tour")
                        .WithMany("TourCities")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("G1720252401.Models.TouristTour", b =>
                {
                    b.HasOne("G1720252401.Models.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G1720252401.Models.Tourist", "Tourist")
                        .WithMany("TouristTours")
                        .HasForeignKey("TouristID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");

                    b.Navigation("Tourist");
                });

            modelBuilder.Entity("G1720252401.Models.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("G1720252401.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("G1720252401.Models.Tour", b =>
                {
                    b.Navigation("TourCities");
                });

            modelBuilder.Entity("G1720252401.Models.Tourist", b =>
                {
                    b.Navigation("TouristTours");
                });
#pragma warning restore 612, 618
        }
    }
}
